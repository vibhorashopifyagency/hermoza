<div class="packery-item {{ listClass }} block-{{ block.id }} wow {{ block.settings.animations_type }} delay-{{ block.settings.animation_delay | replace: ".", "_" }}">
  <style>
    .packery-grid .packery-item.delay-{{ block.settings.animation_delay | replace: ".", "_" }} {
        animation-delay: {{ block.settings.animation_delay }}
    }
  </style>
  <div class="packery-item-inner">
    <div class="packery-img {% if block.settings.image_behavior != 'none' %} animate--{{ block.settings.image_behavior }} animate-hidden{% endif %}">
      {% if block.settings.image != blank %}
          {%- assign preview_img = block.settings.image -%}
          <a {% if block.settings.link == blank %} role="link" aria-disabled="true"{% else %} href="{{ block.settings.link }}"{% endif %} class="image-zoom animate-ambient-image">
              <img {% render 'lazyload',preview_img: preview_img %} />
              {% if settings.enable_lazyload %}<span class="data-lazy-loading"></span>{% endif %}
          </a>
      {% else %}
          <a {% if block.settings.link == blank %} role="link" aria-disabled="true"{% else %} href="{{ block.settings.link }}"{% endif %} class="image-zoom">
              <div class="not_img" style="--height_not_img: {{ imgHeight }}">{{ imgWidth }} x {{ imgHeight }}</div>
          </a>
      {% endif %}
    </div>
    <div class="packery-content align-{{ block.settings.align_horizontal }} justify-{{ block.settings.varticl_align }}">
      {%- if block.settings.title_text != blank -%}
        <h6 class="packery-title">{{ block.settings.title_text }}</h6>
      {%- endif -%}
      
      {%- if block.settings.button != blank -%}
        {% if block.settings.button_style == '1'%}
          <a {% if block.settings.link == blank %} role="link" aria-disabled="true"{% else %} href="{{ block.settings.link }}"{% endif %} class="button packery-button">
              {{ block.settings.button }}
          </a>
        {% elsif block.settings.button_style == '2'%}
          <a {% if block.settings.link == blank %} role="link" aria-disabled="true"{% else %} href="{{ block.settings.link }}"{% endif %} class="button packery-button">
              {{ block.settings.button }} {% render 'arrow-right-2' %}
          </a>
        {% else %}
          <a {% if block.settings.link == blank %} role="link" aria-disabled="true"{% else %} href="{{ block.settings.link }}"{% endif %} class="button packery-button packery-button-3">
              {{ block.settings.button }}
          </a>
        {% endif %}
      {%- endif -%}
    </div>
  </div>
  <style>
    {% if settings.type_font_1 == 'shopify_fonts' and settings.type_font_2 == 'shopify_fonts' %}
        {% assign base_font = settings.type_font_1_font | font_modify: 'weight', '400' %}
        {% assign base_font_medium = settings.type_font_1_font | font_modify: 'weight', '500' %}
        {% assign base_font_sem_bold = settings.type_font_1_font | font_modify: 'weight', '600' %}
        {% assign base_font_bold = settings.type_font_1_font | font_modify: 'weight', 'bold' %}
  
        {{ base_font | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
        {{ base_font_medium | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
        {{ base_font_sem_bold | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
        {{ base_font_bold | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
  
        {% assign fonts_name = base_font.family | append: ',' | append: base_font.fallback_families %}
  
        {% if settings.type_font_2_font.family != settings.type_font_1_font.family %}
            {% assign header_font = settings.type_font_2_font | font_modify: 'weight', '400' %}
            {% assign header_font_bold = settings.type_font_2_font | font_modify: 'weight', 'bold' %}
            {% assign header_font_sem_bold = settings.type_font_2_font | font_modify: 'weight', '600' %}
            {% assign header_font_medium = settings.type_font_2_font | font_modify: 'weight', '500' %}
            
            {{ header_font | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
            {{ header_font_medium | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
            {{ header_font_sem_bold | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
            {{ header_font_bold | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
  
                  {% assign fonts_name_2 = header_font.family | append: ',' | append: header_font.fallback_families %}
        {% else %}
                  {% assign fonts_name_2 = base_font.family | append: ',' | append: base_font.fallback_families %}
        {% endif %}
    {% elsif settings.type_font_1 != 'shopify_fonts' and settings.type_font_2 != 'shopify_fonts' %}
          {%- assign font_1 = settings.type_font_1_name -%}
          {%- capture font_name_1 -%}
              {{font_1 | strip | replace: ' ', '+'}}:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i
          {%- endcapture -%}
          @import url('https://fonts.googleapis.com/css?family={{font_name_1}}&display=swap');
                {% assign fonts_name = font_1 %}
  
          {% if settings.type_font_1_name != settings.type_font_2_name %}
              {%- assign font_2 = settings.type_font_2_name -%}
              {%- capture fonts_name_2 -%}
                  {{font_2 | strip | replace: ' ', '+'}}:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i
              {%- endcapture -%}
              @import url('https://fonts.googleapis.com/css?family={{fonts_name_2}}&display=swap');
                    {% assign fonts_name_2 = font_2 %}
          {% else %}
                    {% assign fonts_name_2 = font_1 %}
          {% endif %}
    {% elsif settings.type_font_1 == 'shopify_fonts' %}
          {% assign base_font = settings.type_font_1_font | font_modify: 'weight', '400' %}
          {% assign base_font_medium = settings.type_font_1_font | font_modify: 'weight', '500' %}
          {% assign base_font_sem_bold = settings.type_font_1_font | font_modify: 'weight', '600' %}
          {% assign base_font_bold = settings.type_font_1_font | font_modify: 'weight', 'bold' %}
  
          {{ base_font | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
          {{ base_font_medium | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
          {{ base_font_sem_bold | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
          {{ base_font_bold | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
  
          {% assign fonts_name = base_font.family | append: ',' | append: base_font.fallback_families %}
        
          {% if base_font.family != settings.type_font_2_name %}
              {%- assign font_2 = settings.type_font_2_name -%}
              {%- capture fonts_name_2 -%}
                  {{font_2 | strip | replace: ' ', '+'}}:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i
              {%- endcapture -%}
              @import url('https://fonts.googleapis.com/css?family={{fonts_name_2}}&display=swap');
                      {% assign fonts_name_2 = font_2 %}
          {% else %}
                    {% assign fonts_name_2 = base_font.family | append: ',' | append: base_font.fallback_families %}
          {% endif %}
    {% else %}
          {% assign header_font = settings.type_font_2_font | font_modify: 'weight', '400' %}
          {% assign header_font_bold = settings.type_font_2_font | font_modify: 'weight', 'bold' %}
          {% assign header_font_sem_bold = settings.type_font_2_font | font_modify: 'weight', '600' %}
          {% assign header_font_medium = settings.type_font_2_font | font_modify: 'weight', '500' %}
  
          {% if header_font.family != settings.type_font_1_name %}
              {%- assign font_1 = settings.type_font_1_name -%}
              {%- capture font_name_1 -%}
                  {{font_1 | strip | replace: ' ', '+'}}:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i
              {%- endcapture -%}
              @import url('https://fonts.googleapis.com/css?family={{font_name_1}}&display=swap');
                    {% assign fonts_name = font_1 %}
          {% else %}
                    {% assign fonts_name = header_font.family | append: ',' | append: header_font.fallback_families %}
          {% endif %}
  
          {{ header_font | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
          {{ header_font_medium | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
          {{ header_font_sem_bold | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
          {{ header_font_bold | font_face | replace: '@font-face {', '@font-face { font-display: swap;' }}
               
          {% assign fonts_name_2 = header_font.family | append: ',' | append: header_font.fallback_families %}
    {% endif %}
    :root {
        {% if block.settings.heading_font_style == 'font_1' %}
            --packery-title-font-type: {{fonts_name}};
        {% else %}
            --packery-title-font-type: {{fonts_name_2}};
        {% endif %}
    }
    
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button {
        font-size: {{ block.settings.button_font_size | append: 'px' }};
        line-height: {{ block.settings.button_line_height | append: 'px' }};
        font-weight: {{ block.settings.button_font_weight }};
        {% if block.settings.button_border_color != blank %}
            border: {{ block.settings.button_border | append: 'px' }} solid {{ block.settings.button_border_color }};
        {% else %}
            border: {{ block.settings.button_border | append: 'px' }} solid var(--button-border-color);
        {% endif %}
        {% if block.settings.button_color != blank %}
            color: {{ block.settings.button_color }};
        {% else %}
            color: var(--button-color);
        {% endif %}
        {% if block.settings.button_bg_color != blank %}
           background: {{ block.settings.button_bg_color }};
        {% else %}
            background: var(--button-bg-color);
        {% endif %}
        letter-spacing: {{ block.settings.button_letter_spacing | append: 'px' }};
        text-transform: {{ block.settings.button_text_transform }};
    }
    .packery-{{section.id}} .block-{{ block.id }} .button.packery-button svg {
        {% if block.settings.button_color != blank %}
             fill: {{ block.settings.button_color }};
        {% else %}
            fill: var(--button-color);
        {% endif %}
        transition: all 400ms ease;
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-content {
        position: absolute;
        max-width: {{ block.settings.content_width | append: 'px' }};
        width: 100%;
    }
    .packery-{{section.id}} .block-{{ block.id }} .button.packery-button-3 {
        padding: 0;
        border-radius: unset;
        border: unset;
        background: unset;
        {% if block.settings.button_color != blank %}
            border-bottom: 1px solid {{ block.settings.button_color }};
        {% else %}
            border-bottom: 1px solid var(--link-color);
        {% endif %}
        {% if block.settings.button_color != blank %}
            color: {{ block.settings.button_color }};
        {% else %}
            color: var(--link-color);
        {% endif %}
 
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-title {
        font-size: {{ block.settings.title_font_size | append: 'px' }};
        line-height: {{ block.settings.heading_title_line_height | append: 'px' }};
        font-weight: {{ block.settings.title_font_weight }};
        letter-spacing: {{ block.settings.title_letter_spacing | append: 'px' }};
        text-transform: {{ block.settings.title_text_transform }};
        {% if block.settings.title_color != blank %}
              color: {{ block.settings.title_color }};
        {% else %}
              color: var(--heading-text-color);
        {% endif %}
        padding-bottom: {{ block.settings.title__space_top | append: 'px' }};
        font-family: var(--packery-title-font-type);
    }
    {% if settings.button_hover_style == '2' %}
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button {
        position: relative;
        overflow: hidden;
        z-index: 0;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:before {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        transform: unset;
        display: unset;
        border: unset;
        border-radius: unset;
        width: unset;
        height: unset;
        animation: unset;
        opacity: unset;
        visibility: unset;
        background: {{ block.settings.button_bghover_color }};
        right: 100%;
        z-index: -1;
        transition: all 400ms ease;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover {
         {% if block.settings.button_hover_color != blank %}
            color: {{ block.settings.button_hover_color }};
        {% else %}
             color: var(--button-hover-color);
        {% endif %}
        {% if block.settings.button_borderhover_color != blank %}
             border: {{ block.settings.button_border | append: 'px' }} solid {{ block.settings.button_borderhover_color }};
        {% else %}
              border: {{ block.settings.button_border | append: 'px' }} solid var(--button-border-hover-color);
        {% endif %}
        
        
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover svg {
        {% if block.settings.button_hover_color != blank %}
             fill: {{ block.settings.button_hover_color }};
        {% else %}
            fill: var(--button-hover-color);
        {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover:before {
        right: 0%;
      }
    {% elsif settings.button_hover_style == '3' %}
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button {
        position: relative;
        overflow: hidden;
        z-index: 0;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:before {
        content: "";
        position: absolute;
        top: 0;
        left: -70%;
        display: unset;
        border: unset;
        border-radius: unset;
        animation: unset;
        opacity: unset;
        visibility: unset;
        background: {{ block.settings.button_bghover_color }};
        z-index: -1;
        transition: all 400ms ease;
        clip-path: polygon(25px 0%, 100% 0%, 100% 100%, 0% 100%);
        width: 70%;
        height: 100%;
        transform: rotateY(180deg);
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:after {
        content: "";
        position: absolute;
        top: 0;
        right: -70%;
        transform: unset;
        display: unset;
        border: unset;
        border-radius: unset;
        animation: unset;
        opacity: unset;
        visibility: unset;
        background: {{ block.settings.button_bghover_color }};
        z-index: -1;
        transition: all 400ms ease;
        clip-path: polygon(25px 0%, 100% 0%, 100% 100%, 0% 100%);
        width: 70%;
        height: 100%;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover {
         {% if block.settings.button_hover_color != blank %}
            color: {{ block.settings.button_hover_color }};
        {% else %}
             color: var(--button-hover-color);
        {% endif %}
        {% if block.settings.button_borderhover_color != blank %}
             border: {{ block.settings.button_border | append: 'px' }} solid {{ block.settings.button_borderhover_color }};
        {% else %}
              border: {{ block.settings.button_border | append: 'px' }} solid var(--button-border-hover-color);
        {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover svg {
        {% if block.settings.button_hover_color != blank %}
             fill: {{ block.settings.button_hover_color }};
        {% else %}
            fill: var(--button-hover-color);
        {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover:before {
        left: calc(0% - 2px);
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover:after {
        right: calc(0% - 2px);
      }
    {% elsif settings.button_hover_style == '4' %}
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button {
        position: relative;
        overflow: hidden;
        z-index: 0;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:before {
        content: "";
        position: absolute;
        top: 0;
        left: -70%;
        display: unset;
        border: unset;
        border-radius: unset;
        animation: unset;
        opacity: unset;
        visibility: unset;
        background: {{ block.settings.button_bghover_color }};
        z-index: -1;
        transition: all 400ms ease;
        clip-path: polygon(25px 0%, 100% 0%, 100% 100%, 0% 100%);
        width: 70%;
        height: 100%;
        transform: rotateY(180deg);
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:after {
        content: "";
        position: absolute;
        top: 0;
        right: -70%;
        transform: unset;
        display: unset;
        border: unset;
        border-radius: unset;
        animation: unset;
        opacity: unset;
        visibility: unset;
        background: {{ block.settings.button_bghover_color }};
        z-index: -1;
        transition: all 400ms ease;
        clip-path: polygon(0px 0%, 100% 0%, 100% 100%, 25px 100%);
        width: 70%;
        height: 100%;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover {
         {% if block.settings.button_hover_color != blank %}
            color: {{ block.settings.button_hover_color }};
        {% else %}
             color: var(--button-hover-color);
        {% endif %}
        {% if block.settings.button_borderhover_color != blank %}
             border: {{ block.settings.button_border | append: 'px' }} solid {{ block.settings.button_borderhover_color }};
        {% else %}
              border: {{ block.settings.button_border | append: 'px' }} solid var(--button-border-hover-color);
        {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover svg {
        {% if block.settings.button_hover_color != blank %}
             fill: {{ block.settings.button_hover_color }};
        {% else %}
            fill: var(--button-hover-color);
        {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover:before {
        left: calc(0% - 2px);
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover:after {
        right: calc(0% - 2px);
      }
    {% elsif settings.button_hover_style == '5' %}
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button {
        position: relative;
        overflow: hidden;
        z-index: 0;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:before {
        content: "";
        position: absolute;
        top: 50%;
        left: -30px;
        display: unset;
        border: unset;
        animation: unset;
        opacity: unset;
        visibility: unset;
        background: {{ block.settings.button_bghover_color }};
        z-index: -1;
        transition: all 400ms ease;
        width: 20px;
        height: 20px;
        transform: translateY(-50%);
        border-radius: 100%;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:after {
        content: "";
        position: absolute;
        top: 50%;
        right: -30px;
        display: unset;
        border: unset;
        animation: unset;
        opacity: unset;
        visibility: unset;
        background: {{ block.settings.button_bghover_color }};
        z-index: -1;
        transition: all 400ms ease;
        width: 20px;
        height: 20px;
        transform: translateY(-50%);
        border-radius: 100%;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover {
        {% if block.settings.button_hover_color != blank %}
          color: {{ block.settings.button_hover_color }};
        {% else %}
             color: var(--button-hover-color);
        {% endif %}
        {% if block.settings.button_borderhover_color != blank %}
             border: {{ block.settings.button_border | append: 'px' }} solid {{ block.settings.button_borderhover_color }};
        {% else %}
              border: {{ block.settings.button_border | append: 'px' }} solid var(--button-border-hover-color);
        {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover svg {
        {% if block.settings.button_hover_color != blank %}
             fill: {{ block.settings.button_hover_color }};
        {% else %}
            fill: var(--button-hover-color);
        {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover:before {
        -webkit-animation: criss-cross-left 0.8s both;
        animation: criss-cross-left 0.8s both;
        -webkit-animation-direction: alternate;
        animation-direction: alternate;
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover:after {
        -webkit-animation: criss-cross-right 0.8s both;
        animation: criss-cross-right 0.8s both;
        -webkit-animation-direction: alternate;
        animation-direction: alternate;
      }
      @-webkit-keyframes criss-cross-left {
        0% {
          left: -30px;
        }
        50% {
          left: calc(50% - 10px);
          width: 20px;
          height: 20px;
        }
        100% {
          left: 40%;
          width: 375px;
          height: 375px;
        }
      }
      
      @keyframes criss-cross-left {
        0% {
          left: -30px;
        }
        50% {
          left: calc(50% - 10px);
          width: 20px;
          height: 20px;
        }
        100% {
          left: 40%;
          width: 375px;
          height: 375px;
        }
      }
      @-webkit-keyframes criss-cross-right {
        0% {
          right: -30px;
        }
        50% {
          right: calc(50% - 10px);
          width: 20px;
          height: 20px;
        }
        100% {
          right: calc(50% - 10px);
          width: 375px;
          height: 375px;
        }
      }
      @keyframes criss-cross-right {
        0% {
          right: -30px;
        }
        50% {
          right: calc(50% - 10px);
          width: 20px;
          height: 20px;
        }
        100% {
          right: calc(50% - 10px);
          width: 375px;
          height: 375px;
        }
      }
    {% else %}
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover {
          {% if block.settings.button_bghover_color != blank %}
              background: {{ block.settings.button_bghover_color }};
          {% else %}
              background: var(--button-bg-hover-color);
          {% endif %}
          {% if block.settings.button_hover_color != blank %}
            color: {{ block.settings.button_hover_color }};
          {% else %}
               color: var(--button-hover-color);
          {% endif %}
          {% if block.settings.button_borderhover_color != blank %}
               border: {{ block.settings.button_border | append: 'px' }} solid {{ block.settings.button_borderhover_color }};
          {% else %}
                border: {{ block.settings.button_border | append: 'px' }} solid var(--button-border-hover-color);
          {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button-3:hover {
          {% if block.settings.button_hover_color != blank %}
              border-bottom: 1px solid {{ block.settings.button_hover_color }};
          {% else %}
              border-bottom: 1px solid var(--link-hover-color);
          {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button:hover svg {
          {% if block.settings.button_hover_color != blank %}
             fill: {{ block.settings.button_hover_color }};
        {% else %}
            fill: var(--button-hover-color);
        {% endif %}
      }
      .packery-{{section.id}} .block-{{ block.id }} .button.packery-button-3:hover {
          border-color:unset;
          background-color:unset;
          border:0px;
          {% if block.settings.button_color != blank %}
               border-bottom: 1px solid {{ block.settings.button_hover_color }} !important;
          {% else %}
               border-bottom: 1px solid var(--link-hover-color); !important;
          {% endif %}
          {% if block.settings.button_hover_color != blank %}
               color:{{ block.settings.button_hover_color }} ;
          {% else %}
               color: var(--link-hover-color);
          {% endif %}
          
      }
    {% endif %}
    
    .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-top.justify-left {
        top: {{ block.settings.content_top_bottom_padding | append: 'px' }};
        left: {{ block.settings.content_left_right_padding | append: 'px' }};
    }
    body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-top.justify-left {
        left: unset;
        right: {{ block.settings.content_left_right_padding | append: 'px' }};
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-top.justify-right {
        top: {{ block.settings.content_top_bottom_padding | append: 'px' }};
        right: {{ block.settings.content_left_right_padding | append: 'px' }};
    }
    body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-top.justify-right {
        right: unset;
        left: {{ block.settings.content_left_right_padding | append: 'px' }};
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-bottom.justify-right {
        bottom: {{ block.settings.content_top_bottom_padding | append: 'px' }};
        right: {{ block.settings.content_left_right_padding | append: 'px' }};
    }
    body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-bottom.justify-right {
      right: unset;
      left: {{ block.settings.content_left_right_padding | append: 'px' }};
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-bottom.justify-left {
        bottom: {{ block.settings.content_top_bottom_padding | append: 'px' }};
        left: {{ block.settings.content_left_right_padding | append: 'px' }};
    }
    body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-bottom.justify-left {
      left: unset;
      right: {{ block.settings.content_left_right_padding | append: 'px' }};
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-bottom.justify-center {
        bottom: {{ block.settings.content_top_bottom_padding | append: 'px' }};
        left: 50%;
        transform: translate(-50%);
        text-align: center;
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-top.justify-center {
        top: {{ block.settings.content_top_bottom_padding | append: 'px' }};
        left: 50%;
        transform: translate(-50%);
        text-align: center;
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-center.justify-center {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-center.justify-left {
        top: 50%;
        left: {{ block.settings.content_left_right_padding | append: 'px' }};
        transform: translateY(-50%);
    }
    body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-center.justify-left {
      left: unset;
      right: {{ block.settings.content_left_right_padding | append: 'px' }};
    }
    .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-center.justify-right {
        top: 50%;
        right: {{ block.settings.content_left_right_padding | append: 'px' }};
        transform: translateY(-50%);
    }
    body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-center.justify-right {
        right: unset;
        left: {{ block.settings.content_left_right_padding | append: 'px' }};
    }

    @media (max-width: 1024px) {
        .packery-{{section.id}} .block-{{ block.id }} .packery-title {
            font-size: {{ block.settings.heading_title_tb | append: 'px' }};
            line-height: {{ block.settings.heading_title_line_height_tb | append: 'px' }};
            padding-bottom: {{ block.settings.title__space_top_tb | append: 'px' }};
        }
        .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-top.justify-left {
            top: 20px;
            left: 20px;
        }
        body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-top.justify-left {
          left: unset;
          right: 20px;
        }
        .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-bottom.justify-left {
            bottom: 18px;
            left: 20px;
        }
        body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-bottom.justify-left {
          left: unset;
          right: 20px;
        }
        .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-top.justify-right {
            top: 18px;
            right: 20px;
        }
        body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-top.justify-right {
          right: unset;
          left: 20px;
        }
        .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-bottom.justify-right {
            bottom: 18px;
            right: 20px;
        }
        body.layout_rtl .packery-{{section.id}} .block-{{ block.id }} .packery-content.align-bottom.justify-right {
          right: unset;
          left: 20px;
        }
    }

    @media (max-width: 767px) {
        .packery-{{section.id}} .block-{{ block.id }} .packery-title {
            font-size: {{ block.settings.heading_title_mb | append: 'px' }};
            line-height: {{ block.settings.heading_title_line_height_mb | append: 'px' }};
            padding-bottom: {{ block.settings.title__space_top_mb | append: 'px' }};
        }
    }
  </style>
</div>